<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MojangSharp</name>
    </assembly>
    <members>
        <member name="T:MojangSharp.Api.Requester">
            <summary>
            Requester class, performs all the requests.
            </summary>
        </member>
        <member name="F:MojangSharp.Api.Requester.Timeout">
            <summary>
            Defines timeout for http requests.
            </summary>
        </member>
        <member name="F:MojangSharp.Api.Requester.Encoding">
            <summary>
            Defines encoding for reading responses and writing requests.
            </summary>
        </member>
        <member name="F:MojangSharp.Api.Requester.Name">
            <summary>
            Current name of Mojangsharp.
            </summary>
        </member>
        <member name="F:MojangSharp.Api.Requester.Version">
            <summary>
            Current version of Mojangsharp.
            </summary>
        </member>
        <member name="P:MojangSharp.Api.Requester.ClientToken">
            <summary>
            An UUID representing this instance of requester. Change only if you know what it means.
            </summary>
        </member>
        <member name="P:MojangSharp.Api.Requester.Client">
            <summary>
            Represents the http client used in the web requests.
            </summary>
        </member>
        <member name="M:MojangSharp.Api.Requester.Get``1(MojangSharp.IEndpoint{``0},System.Boolean)">
            <summary>
            Sends a GET request to the given endpoint.
            </summary>
            <typeparam name="T">Type of the return response</typeparam>
        </member>
        <member name="M:MojangSharp.Api.Requester.Post``1(MojangSharp.IEndpoint{``0})">
            <summary>
            Sends a POST request to the given endpoint.
            </summary>
            <typeparam name="T">Type of the return response</typeparam>
        </member>
        <member name="M:MojangSharp.Api.Requester.Post``1(MojangSharp.IEndpoint{``0},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Sends a POST request to the given endpoint.
            </summary>
        </member>
        <member name="M:MojangSharp.Api.Requester.Put``1(MojangSharp.IEndpoint{``0},System.Uri)">
            <summary>
            Sends a PUT request to the given endpoint.
            </summary>
        </member>
        <member name="M:MojangSharp.Api.Requester.Delete``1(MojangSharp.IEndpoint{``0})">
            <summary>
            Sends a DELETE request to the given endpoint.
            </summary>
        </member>
        <member name="T:MojangSharp.Api.Uuid">
            <summary>
            Represents the UUID of a player and contains some more data such as its username and
            booleans indicating if its account is paid and/or migrated.
            </summary>
        </member>
        <member name="M:MojangSharp.Api.Uuid.#ctor">
            <summary>
            Instantiate an Uuid item.
            </summary>
        </member>
        <member name="P:MojangSharp.Api.Uuid.Value">
            <summary>
            UUID of the player corresponding to the given date.
            </summary>
        </member>
        <member name="P:MojangSharp.Api.Uuid.PlayerName">
            <summary>
            Nickname the player had at the given date.
            </summary>
        </member>
        <member name="P:MojangSharp.Api.Uuid.Legacy">
            <summary>
            Indicates weither or not the player's account has migrated to Mojang.
            If true, this account has not migrated.
            </summary>
        </member>
        <member name="P:MojangSharp.Api.Uuid.Demo">
            <summary>
            Indicates weither or not the player's account is a demo-only account.
            If true, this account has not bought Minecraft.
            </summary>
        </member>
        <member name="T:MojangSharp.Endpoints.Credentials">
            <summary>
            Represents a couple of username and password for authentication purposes
            </summary>
        </member>
        <member name="P:MojangSharp.Endpoints.Credentials.Username">
            <summary>
            Username
            </summary>
        </member>
        <member name="P:MojangSharp.Endpoints.Credentials.Password">
            <summary>
            Password
            </summary>
        </member>
        <member name="T:MojangSharp.Endpoints.Authenticate">
            <summary>
            Authenticate request class
            </summary>
        </member>
        <member name="M:MojangSharp.Endpoints.Authenticate.#ctor(MojangSharp.Endpoints.Credentials)">
            <summary>
            Sends a request of authentication
            </summary>
        </member>
        <member name="M:MojangSharp.Endpoints.Authenticate.PerformRequestAsync">
            <summary>
            Performs the authentication.
            </summary>
        </member>
        <member name="T:MojangSharp.Endpoints.Refresh">
            <summary>
            Refresh authentication request class
            </summary>
        </member>
        <member name="M:MojangSharp.Endpoints.Refresh.#ctor(System.String)">
            <summary>
            Refreshes the access token. Must be the same instance as authenticate.
            </summary>
        </member>
        <member name="M:MojangSharp.Endpoints.Refresh.PerformRequestAsync">
            <summary>
            Performs refresh token.
            </summary>
            <returns></returns>
        </member>
        <member name="T:MojangSharp.Endpoints.Validate">
            <summary>
            Validate token request class
            </summary>
        </member>
        <member name="M:MojangSharp.Endpoints.Validate.#ctor(System.String)">
            <summary>
            Refreshes the access token. Must be the same instance as authenticate.
            </summary>
        </member>
        <member name="M:MojangSharp.Endpoints.Validate.PerformRequestAsync">
            <summary>
            Performs validate token.
            </summary>
        </member>
        <member name="T:MojangSharp.Endpoints.Signout">
            <summary>
            Sign out request class
            </summary>
        </member>
        <member name="M:MojangSharp.Endpoints.Signout.#ctor(MojangSharp.Endpoints.Credentials)">
            <summary>
            Refreshes the access token. Must be the same instance as authenticate.
            </summary>
        </member>
        <member name="M:MojangSharp.Endpoints.Signout.PerformRequestAsync">
            <summary>
            Performs signing out
            </summary>
        </member>
        <member name="T:MojangSharp.Endpoints.Invalidate">
            <summary>
            Invalidate token request class
            </summary>
        </member>
        <member name="M:MojangSharp.Endpoints.Invalidate.#ctor(System.String)">
            <summary>
            Refreshes the access token. Must be the same instance as authenticate.
            </summary>
        </member>
        <member name="M:MojangSharp.Endpoints.Invalidate.PerformRequestAsync">
            <summary>
            Performs validate token.
            </summary>
        </member>
        <member name="T:MojangSharp.Endpoints.BlockedServers">
            <summary>
            Gets a list of SHA1 hashes used to check blocked servers addresses
            Clients check the lowercase name, using the ISO-8859-1 charset, against this list.
            They will also attempt to check subdomains, replacing each level with a *.
            Specifically, it splits based off of the . in the domain, goes through each section removing one at a time.
            For instance, for mc.example.com, it would try mc.example.com, *.example.com, and *.com. With IP addresses
            (verified by having 4 split sections, with each section being a valid integer between 0 and 255, inclusive)
            substitution starts from the end, so for 192.168.0.1, it would try 192.168.0.1, 192.168.0.*, 192.168.*, and 192.*.
            This check is done by the bootstrap class in netty.The default netty class is overridden by one in the com.mojang:netty dependency
            loaded by the launcher. This allows it to affect any version that used netty (1.7+)
            </summary>
        </member>
        <member name="M:MojangSharp.Endpoints.BlockedServers.#ctor">
            <summary>
            Instance of BlockServer request class
            </summary>
        </member>
        <member name="M:MojangSharp.Endpoints.BlockedServers.PerformRequestAsync">
            <summary>
            Performs a Block Server request
            </summary>
            <returns></returns>
        </member>
        <member name="T:MojangSharp.Endpoints.Challenges">
            <summary>
            Challenges request class
            </summary>
        </member>
        <member name="M:MojangSharp.Endpoints.Challenges.#ctor(System.String)">
            <summary>
            Instantiates the endpoints which allows to get an user's challenges.
            </summary>
            <param name="token">A valid user token.</param>
        </member>
        <member name="M:MojangSharp.Endpoints.Challenges.PerformRequestAsync">
            <summary>
            Performs the request and return the Response property.
            </summary>
        </member>
        <member name="T:MojangSharp.Endpoints.ChangeSkin">
            <summary>
            Changes a player's skin from an url
            </summary>
        </member>
        <member name="M:MojangSharp.Endpoints.ChangeSkin.#ctor(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates a change skin request with a given UUID.
            </summary>
            <param name="accessToken">User Access Token</param>
            <param name="uuid">UUID of the player.</param>
            <param name="skinUrl">URL of the skin.</param>
            <param name="slim">Defines if slim model is used.</param>
        </member>
        <member name="M:MojangSharp.Endpoints.ChangeSkin.PerformRequestAsync">
            <summary>
            Performs the skin change.
            </summary>
        </member>
        <member name="T:MojangSharp.Endpoints.NameHistory">
            <summary>
            UUID to name history endpoint.
            </summary>
        </member>
        <member name="M:MojangSharp.Endpoints.NameHistory.#ctor(System.String)">
            <summary>
            Return all the usernames the user has used in the past.
            </summary>
            <param name="uuid">User's UUID.</param>
        </member>
        <member name="M:MojangSharp.Endpoints.NameHistory.PerformRequestAsync">
            <summary>
            Performs a name history request.
            </summary>
            <returns></returns>
        </member>
        <member name="T:MojangSharp.Endpoints.Profile">
            <summary>
            Profile request class
            </summary>
        </member>
        <member name="P:MojangSharp.Endpoints.Profile.Unsigned">
            <summary>
            Applies unsigned setting to the request
            </summary>
        </member>
        <member name="M:MojangSharp.Endpoints.Profile.#ctor(System.String,System.Boolean)">
            <summary>
            Returns player's username and additional informations
            </summary>
            <param name="uuid">Player UUID</param>
            <param name="unsigned"></param>
        </member>
        <member name="M:MojangSharp.Endpoints.Profile.PerformRequestAsync">
            <summary>
            Performs the profile request.
            </summary>
        </member>
        <member name="T:MojangSharp.Endpoints.ResetSkin">
            <summary>
            Deletes a user skin
            </summary>
        </member>
        <member name="M:MojangSharp.Endpoints.ResetSkin.#ctor(System.String,System.String)">
            <summary>
            Creates a change skin request with a given UUID.
            </summary>
            <param name="accessToken">Access token of the player</param>
            <param name="uuid">UUID of the player.</param>
        </member>
        <member name="M:MojangSharp.Endpoints.ResetSkin.PerformRequestAsync">
            <summary>
            Performs the skin change.
            </summary>
        </member>
        <member name="T:MojangSharp.Endpoints.SecureIP">
            <summary>
            Location secured IP request class
            </summary>
        </member>
        <member name="M:MojangSharp.Endpoints.SecureIP.#ctor(System.String)">
            <summary>
            Instantiates the endpoints which allows to see if this IP is secured.
            </summary>
            <param name="token">A valid user token.</param>
        </member>
        <member name="M:MojangSharp.Endpoints.SecureIP.PerformRequestAsync">
            <summary>
            Performs the request and return the Response property.
            </summary>
        </member>
        <member name="T:MojangSharp.Endpoints.Statistics">
            <summary>
            Statistics requets class
            </summary>
        </member>
        <member name="M:MojangSharp.Endpoints.Statistics.#ctor(System.Collections.Generic.List{MojangSharp.Endpoints.Statistics.Item})">
            <summary>
            Asks Mojang for its statistics about the given item
            </summary>
        </member>
        <member name="M:MojangSharp.Endpoints.Statistics.#ctor(MojangSharp.Endpoints.Statistics.Item[])">
            <summary>
            Asks Mojang for its statistics about the given item
            </summary>
        </member>
        <member name="M:MojangSharp.Endpoints.Statistics.PerformRequestAsync">
            <summary>
            Performs a statistic request
            </summary>
            <returns></returns>
        </member>
        <member name="F:MojangSharp.Endpoints.Statistics.StatisticItems">
            <summary>
            List of available statistic items
            </summary>
        </member>
        <member name="T:MojangSharp.Endpoints.Statistics.Item">
            <summary>
            Available statistics entries
            </summary>
        </member>
        <member name="F:MojangSharp.Endpoints.Statistics.Item.MinecraftAccountsSold">
            <summary>
            Amount of minecraft accounts sold
            </summary>
        </member>
        <member name="F:MojangSharp.Endpoints.Statistics.Item.MinecraftPrepaidCardsRedeemed">
            <summary>
            Amount of minecraft prepaid card redeemed
            </summary>
        </member>
        <member name="F:MojangSharp.Endpoints.Statistics.Item.CobaltAccountsSold">
            <summary>
            Amount of cobalt accounts sold
            </summary>
        </member>
        <member name="F:MojangSharp.Endpoints.Statistics.Item.ScrollsAccountsSold">
            <summary>
            Amount of scrolls accounts sold
            </summary>
        </member>
        <member name="T:MojangSharp.Endpoints.UploadSkin">
            <summary>
            Upload Skin endpoint class
            </summary>
        </member>
        <member name="P:MojangSharp.Endpoints.UploadSkin.Skin">
            <summary>
            Chosen skin local path
            </summary>
        </member>
        <member name="M:MojangSharp.Endpoints.UploadSkin.#ctor(System.String,System.String,System.Uri,System.Boolean)">
            <summary>
            Creates a change skin request with a given UUID.
            </summary>
            <param name="accessToken">Access Token of the player.</param>
            <param name="uuid">UUID of the player.</param>
            <param name="skin">Path to the skin.</param>
            <param name="slim">Defines if slim model is used.</param>
        </member>
        <member name="M:MojangSharp.Endpoints.UploadSkin.PerformRequestAsync">
            <summary>
            Performs the skin change.
            </summary>
        </member>
        <member name="T:MojangSharp.Endpoints.UuidByNames">
            <summary>
            UuidByName requests class
            </summary>
        </member>
        <member name="M:MojangSharp.Endpoints.UuidByNames.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Obtains a list of Uuid corresponding to the given usernames
            </summary>
            <param name="usernames"></param>
        </member>
        <member name="M:MojangSharp.Endpoints.UuidByNames.#ctor(System.String[])">
            <summary>
            Obtains a list of Uuid corresponding to the given usernames
            </summary>
            <param name="usernames"></param>
        </member>
        <member name="M:MojangSharp.Endpoints.UuidByNames.PerformRequestAsync">
            <summary>
            Performs an UuidByNames request.
            </summary>
            <returns></returns>
        </member>
        <member name="T:MojangSharp.Endpoints.ApiStatus">
            <summary>
            Api Status request class
            </summary>
        </member>
        <member name="M:MojangSharp.Endpoints.ApiStatus.#ctor">
            <summary>
            Instantiates the endpoints which allows to get Mojang's APIs status.
            </summary>
        </member>
        <member name="M:MojangSharp.Endpoints.ApiStatus.PerformRequestAsync">
            <summary>
            Performs the request and return the Response property.
            </summary>
        </member>
        <member name="T:MojangSharp.Endpoints.UuidAtTime">
            <summary>
            UuidAtTime request class
            </summary>
        </member>
        <member name="M:MojangSharp.Endpoints.UuidAtTime.#ctor(System.String,System.DateTime)">
            <summary>
            Instantiates the endpoints which allows to get a player's UUID at a certain time.
            <paramref name="username">Username of the player you want to get UUID's</paramref>
            <paramref name="date">Date at which you want to get the UUID</paramref>
            </summary>
        </member>
        <member name="M:MojangSharp.Endpoints.UuidAtTime.PerformRequestAsync">
            <summary>
            Performs an UuidAtTime request.
            </summary>
            <returns></returns>
        </member>
        <member name="T:MojangSharp.Responses.AuthenticateResponse">
            <summary>
            Response to an authenticate request
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.AuthenticateResponse.AccessToken">
            <summary>
            Access Token for this user
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.AuthenticateResponse.ClientToken">
            <summary>
            Must be the same as Requester.ClientToken
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.AuthenticateResponse.AvailableProfiles">
            <summary>
            List of available profiles
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.AuthenticateResponse.SelectedProfile">
            <summary>
            Last profile selected by the user
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.AuthenticateResponse.User">
            <summary>
            User data sent by requestUser
            </summary>
        </member>
        <member name="T:MojangSharp.Responses.AuthenticateResponse.UserData">
            <summary>
            Represents data sent by requestUser option
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.AuthenticateResponse.UserData.Uuid">
            <summary>
            User UUID
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.AuthenticateResponse.UserData.Properties">
            <summary>
            Properties of this user
            </summary>
        </member>
        <member name="T:MojangSharp.Responses.AuthenticateResponse.UserData.Property">
            <summary>
            Represents a user property
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.AuthenticateResponse.UserData.Property.Name">
            <summary>
            Property name
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.AuthenticateResponse.UserData.Property.Value">
            <summary>
            Property value
            </summary>
        </member>
        <member name="T:MojangSharp.Responses.TokenResponse">
            <summary>
            Represents a response to a payload who returns token
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.TokenResponse.AccessToken">
            <summary>
            Access token for this instance
            </summary>
        </member>
        <member name="T:MojangSharp.Responses.AuthenticationResponseError">
            <summary>
            Represents an error occured while using authentication API
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.AuthenticationResponseError.Cause">
            <summary>
            Cause of this error (optional)
            </summary>
        </member>
        <member name="T:MojangSharp.Responses.BlockedServersResponse">
            <summary>
            A response containing all blocked servers.
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.BlockedServersResponse.BlockedServers">
            <summary>
            List of the current blocked servers.
            </summary>
        </member>
        <member name="T:MojangSharp.Responses.BlockedServersResponse.BlockedServer">
            <summary>
            Blocked Server response contents
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.BlockedServersResponse.BlockedServer.AddressSHA1">
            <summary>
            SHA1 address of the server
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.BlockedServersResponse.BlockedServer.Cracked">
            <summary>
            True if the SHA1 address has been cracked (see Address)
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.BlockedServersResponse.BlockedServer.Address">
            <summary>
            Address if the server has been cracked.
            </summary>
        </member>
        <member name="M:MojangSharp.Responses.BlockedServersResponse.BlockedServer.Parse(System.String)">
            <summary>
            Gets a list of blocked servers (cracked ones included).
            </summary>
        </member>
        <member name="F:MojangSharp.Responses.BlockedServersResponse.BlockedServer.KnownCrackedServers">
            <summary>
            List of known cracked servers.
            </summary>
        </member>
        <member name="T:MojangSharp.Responses.ChallengesResponse">
            <summary>
            Contains the security questions and their answer's id
            </summary>
        </member>
        <member name="T:MojangSharp.Responses.ChallengesResponse.Challenge">
            <summary>
            A challenge contains an ID to the answer, and ID to the question and the text of said question.
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.ChallengesResponse.Challenges">
            <summary>
            Contains the challenges.
            </summary>
        </member>
        <member name="T:MojangSharp.Responses.NameHistoryResponse">
            <summary>
            Response containing all name changes.
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.NameHistoryResponse.NameHistory">
            <summary>
            History of all name changes.
            </summary>
        </member>
        <member name="T:MojangSharp.Responses.NameHistoryResponse.NameHistoryEntry">
            <summary>
            An entry of name history
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.NameHistoryResponse.NameHistoryEntry.Name">
            <summary>
            Chosen name.
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.NameHistoryResponse.NameHistoryEntry.ChangedToAt">
            <summary>
            Date at which user changed is name to.
            </summary>
        </member>
        <member name="T:MojangSharp.Responses.ProfileResponse">
            <summary>
            Profile response class
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.ProfileResponse.Uuid">
            <summary>
            Player's UUID.
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.ProfileResponse.Properties">
            <summary>
            Player's profile properties
            </summary>
        </member>
        <member name="T:MojangSharp.Responses.ProfileResponse.ProfileProperties">
            <summary>
            Class representing all properties of a profile
            </summary>
        </member>
        <member name="M:MojangSharp.Responses.ProfileResponse.ProfileProperties.#ctor(System.String)">
            <summary>
            Instantiate properties thanks to the base64 string
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.ProfileResponse.ProfileProperties.Date">
            <summary>
            Timestamp value
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.ProfileResponse.ProfileProperties.ProfileUuid">
            <summary>
            Profile UUID
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.ProfileResponse.ProfileProperties.ProfileName">
            <summary>
            Profile name
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.ProfileResponse.ProfileProperties.SignatureRequired">
            <summary>
            No clue what this is about
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.ProfileResponse.ProfileProperties.SkinUri">
            <summary>
            Skin URI. May not work if the user has no skin.
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.ProfileResponse.ProfileProperties.CapeUri">
            <summary>
            Cape URI
            </summary>
        </member>
        <member name="T:MojangSharp.Responses.ProfileResponseError">
            <summary>
            Represents an error occured while accessing profile API
            </summary>
        </member>
        <member name="T:MojangSharp.Responses.ApiStatusResponse">
            <summary>
            Contains all the status of Mojang services.
            </summary>
        </member>
        <member name="T:MojangSharp.Responses.ApiStatusResponse.Status">
            <summary>
            Possible status of Mojang services.
            </summary>
        </member>
        <member name="F:MojangSharp.Responses.ApiStatusResponse.Status.Unknown">
            <summary>
            Unable to retrieve the status. Either the API changed or the service is unavailable.
            </summary>
        </member>
        <member name="F:MojangSharp.Responses.ApiStatusResponse.Status.Available">
            <summary>
            The service is available and has no issue.
            </summary>
        </member>
        <member name="F:MojangSharp.Responses.ApiStatusResponse.Status.SomeIssues">
            <summary>
            The service is available but has some issues.
            </summary>
        </member>
        <member name="F:MojangSharp.Responses.ApiStatusResponse.Status.Unavailable">
            <summary>
            The services has issues and is unavailable.
            </summary>
        </member>
        <member name="M:MojangSharp.Responses.ApiStatusResponse.Parse(System.String)">
            <summary>
            Parses an input to get a status enum.
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.ApiStatusResponse.Minecraft">
            <summary>
            Status of Minecraft.net
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.ApiStatusResponse.Mojang">
            <summary>
            Status of mojang.com
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.ApiStatusResponse.Sessions">
            <summary>
            Status of session.minecraft.net
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.ApiStatusResponse.Textures">
            <summary>
            Status of textures.minecraft.net
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.ApiStatusResponse.MojangSessionsServer">
            <summary>
            Status of sessionserver.mojang.com
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.ApiStatusResponse.MojangAccounts">
            <summary>
            Status of accounts.mojang.com
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.ApiStatusResponse.MojangAuthenticationService">
            <summary>
            Status of auth.mojang.com
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.ApiStatusResponse.MojangAutenticationServers">
            <summary>
            Status of authserver.mojang.com
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.ApiStatusResponse.Skins">
            <summary>
            Status of skins.minecraft.net
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.ApiStatusResponse.MojangApi">
            <summary>
            Status of api.mojang.com
            </summary>
        </member>
        <member name="T:MojangSharp.Responses.StatisticsResponse">
            <summary>
            Represends a statistics request response
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.StatisticsResponse.Total">
            <summary>
            Total amount of sold
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.StatisticsResponse.Last24h">
            <summary>
            Total sold in last 24 hours
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.StatisticsResponse.SaleVelocity">
            <summary>
            Average sales by seconds
            </summary>
        </member>
        <member name="T:MojangSharp.Responses.UuidAtTimeResponse">
            <summary>
            Response containing the UUID of a player at the given time.
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.UuidAtTimeResponse.Uuid">
            <summary>
            Uuid
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.UuidAtTimeResponse.Date">
            <summary>
            The date at which the UUID was corresponding.
            </summary>
        </member>
        <member name="T:MojangSharp.Responses.UuidByNamesResponse">
            <summary>
            Response containing the list of UUIDs
            </summary>
        </member>
        <member name="P:MojangSharp.Responses.UuidByNamesResponse.UuidList">
            <summary>
            The list of UUID corresponding to the names.
            </summary>
        </member>
        <member name="T:MojangSharp.Response">
            <summary>
            Default response class, can be inherited.
            </summary>
        </member>
        <member name="P:MojangSharp.Response.Code">
            <summary>
            Status code of the response.
            </summary>
        </member>
        <member name="P:MojangSharp.Response.IsSuccess">
            <summary>
            Defines weither or note the request is a success.
            </summary>
        </member>
        <member name="P:MojangSharp.Response.RawMessage">
            <summary>
            Response's raw message contents.
            </summary>
        </member>
        <member name="P:MojangSharp.Response.Error">
            <summary>
            Contains an error if the request failed.
            </summary>
        </member>
        <member name="T:MojangSharp.Error">
            <summary>
            Default error class.
            </summary>
        </member>
        <member name="P:MojangSharp.Error.ErrorTag">
            <summary>
            Tag of the given error.
            </summary>
        </member>
        <member name="P:MojangSharp.Error.ErrorMessage">
            <summary>
            Details of the error.
            </summary>
        </member>
        <member name="P:MojangSharp.Error.Exception">
            <summary>
            Exception if code-side error.
            </summary>
        </member>
        <member name="M:MojangSharp.Error.GetError(MojangSharp.Response)">
            <summary>
            Gets an error thanks to a response.
            </summary>
        </member>
        <member name="T:MojangSharp.IEndpoint`1">
            <summary>
            Endpoint parent class
            </summary>
            <typeparam name="T">Response type of that endpoint.</typeparam>
        </member>
        <member name="P:MojangSharp.IEndpoint`1.Address">
            <summary>
            Endpoint's address
            </summary>
        </member>
        <member name="P:MojangSharp.IEndpoint`1.Response">
            <summary>
            Response after request is performed.
            </summary>
        </member>
        <member name="P:MojangSharp.IEndpoint`1.Arguments">
            <summary>
            Arguments to be sent.
            </summary>
        </member>
        <member name="P:MojangSharp.IEndpoint`1.PostContent">
            <summary>
            Contents for a post request, must be set before performing it.
            </summary>
        </member>
        <member name="M:MojangSharp.IEndpoint`1.PerformRequestAsync">
            <summary>
            Performs the request
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
